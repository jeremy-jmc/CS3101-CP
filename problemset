        S1

Kattis
    Different -> Resta entre numeros(<=1e15)
    Busnumbers -> Acortar numeros consecutivos
    Server -> disminuir hasta que sea posible
    Cold -> number of negative numbers
        Mandelbrot -> "Enunciadazo"
    Natrij -> Diferencia de 2 horas
    Pathtracing -> Trazado de path
        up
        down
        left
        right
        right
        left
        down

UVA
    UVA441 Lotto
        Subset of only six numbers in increasing order(6 for's)
    UVA725 Division
        two numbers A, B such that A/B = N and A, B use the digits 0-9 once each among them
    UVA11565
        find three numbers x, y, z such that
            x + y + z = A
            xyz = B
            x^2 + y^2 + z^2 = C
        equations
        find boundaries to reduce the complete search
            1 <= A, B, C <= 10000
    UVA12455 Bars
        subset for each bit
            N <= 1000 thus N have at most 9 bits (log2(1000))
                recursion depth = 9 bits
                    in the level-th depth of the recursion find all numbers that can contribute with it level-th bit in 1 (on)
                        two options
                            pick
                            don't pick
                        previously marked as visited in vis[] array
    
        S2

Kattis 
    Closest Sums
        Kattis Sylvester
            print the submatrix from given (X, Y) with width W and height H
            of the H_2n Haddamard matrix

            IDEAS: Divide&Conquer
            https://open.kattis.com/problems/sylvester
        Kattis Ballotboxes
            given a number of cities N and B ballot boxes
            find the maximum number of people to one ballot boxes if we distributed the ballot boxes in the most efficient assignment
            
            IDEAS: mochila fraccionaria
UVA
        UVA750 8 Queen Chess Problem
            https://onlinejudge.org/index.php?option=onlinejudge&Itemid=8&page=show_problem&problem=691

    UVA10344 23 out of 5
        WARNING: sort() before next_permutation(), biyective function (permutations)
            next_permutation() trabaja lexicograficamente por eso se debe sortear previamente

        UVA10276 Hanoi Tower Troubles Again!
            Given N (1 <= N <= 50) pegs. 
            Place the numbers in the pegs such that the sum between two adjacent balls is a square number
                Prove from what number is infinite
                    distance between consecutive squares
                        (x+1)^2 - x^2 = (x+1 + x) * (x+1 - x) = 2x + 1
                
                Find the subproblem (induccion)
            
            https://onlinejudge.org/index.php?option=onlinejudge&Itemid=8&page=show_problem&problem=1217

            Probar
                Encontrar la serie de las bases de los palos
                A partir de ello encontrar y probar q un numero contribuye a una construccion de (b)^2 y (b+1)^2
                    Encontrar intersecciones
                Y con eso de demuestra que nunca va ser infinito

    Kayaks
        N <= 10         # teams
        S <= N          # teams with damaged kayaks
        R <= N          # teams with reserved kayaks


        N S R
        s_1 ... s_S
        r_1 ... r_R
    F - Podio
        ranking scheme
        consider weight vectors of the form
            (1/n^j, 1/n^k, 1/n^l) 
                where n is the total number of medals won by athletes
                j, k and l are integers
            find a weight vector if exists
                Canada wins!
            else
                Canada cannot win
        IDEA: iterar inteligentemente los posibles valores de los exponentes
CSES
    CSES2165
        Tower of Hanoi
            Divide & Conquer


Canada 3 2 1
USA 1 2 3
    1/12^

USA 2 2 2
Canada 1 1 1
    1/9^



ASSUMPTION 1

(n^x1, n^x2, n^x3)
(n^0, n^(x2-x1), n^(x3-x2))

ASSUMPTION 2
n = 100

ASSUMPTION 3
exponentes van a ser relativamente peque;os

Hay un arrastre con piso de sqrt por eso se usa piso


SPOJ LASTDIG
    Last digit of a^b
        a <= 20
        b <= 214748300
SPOJ LOCKER
Kattis Need for Speed
D str
    st <= 1e4
    

DP
    1, 6, 7 coins -> greedy falla
    fibonacci
        inclusion de una estructura que te guarde data precalculada


Mayusculas?

OPT(i, 0) -> min # mov para que la cadena termine en minuscula

OPT(i, 0) = {
    i es mayuscula
        OPT(i-1, 0) + 1
    i es minuscula
        OPT(i-1, 0)
}


OPT(i, 1) -> min # mov para que la cadena termine en mayuscula

OPT(i, 1) = {
    i es mayuscula
        min(OPT(i-1, 0), OPT(i-1, 1));
    i es minuscula
        min(OPT(i-1, 0), OPT(i-1, 1)) + 1;
}



OPT(i, 0) -> min # mov para que la cadena empiece en minuscula

OPT(i, 0) = {
    i es mayuscula
        OPT(i+1, 0) + 1
    i es minuscula
        OPT(i+1, 0)
}


OPT(i, 1) -> min # mov para que la cadena empiece en mayuscula

OPT(i, 1) = {
    i es mayuscula
        min(OPT(i+1, 0), OPT(i+1, 1));
    i es minuscula
        min(OPT(i+1, 0), OPT(i+1, 1)) + 1;
}


2N: # rooms
K: # rooms to close
target: maximizar la suma de los valores de los rooms abiertos/minimizar la suma de los rooms cerrados

i -> altura de la galeria
k -> # rooms cerrados
j -> accion ejecutada (0: pasar, 1: cerrar left, 2: cerrar right)
R -> rooms
    R[i][1] -> valor del room i izquierdo
    R[i][2] -> valor del room i derecho

OPT(i, k, j) = minimo valor de k rooms cerrados para galeria de altura i ejecutando la accion j.
        k <= i
        k > i   -> INF

OPT(i, k, j) = {
    j == 0      -> pasar
            min(
                OPT(i-1, k, 0),
                OPT(i-1, k, 1),
                OPT(i-1, k, 2)
            ) + 0
    j == 1    -> cerrar left
            min(
                OPT(i-1, k-1, 0),
                OPT(i-1, k-1, 1)
            ) + R[i][1]
    j == 2  -> cerrar right
            min(
                OPT(i-1, k-1, 0),
                OPT(i-1, k-1, 2)
            ) + R[i][2]
}

La respuesta se encuentra en min(OPT(N, K, 0), OPT(N, K, 1), OPT(N, K, 2))



CSES
    Labyrinth
Codeforces
        277A Learning Languages